{"is_source_file": true, "format": "TypeScript", "description": "This file defines composable functions for managing notes, including API interactions (fetching, creating, updating, deleting notes) and reactive state management using Vue's Composition API.", "external_files": ["#app"], "external_methods": ["useRuntimeConfig", "useFetch"], "published": ["useFetchNotes", "useFetchNote", "useCreateNote", "useUpdateNote", "useDeleteNote", "useNotesState", "Note", "NotePayload"], "classes": [], "methods": [{"name": "export async function useFetchNotes(query?: string): Promise<Note[]> { useFetchNotes", "description": "Fetches all notes with an optional search query by making a GET request to the backend API.", "scope": "", "scopeKind": ""}, {"name": "export async function useFetchNote(id: string): Promise<Note | null> { useFetchNote", "description": "Fetches a single note by its ID.", "scope": "", "scopeKind": ""}, {"name": "export async function useCreateNote(payload: NotePayload): Promise<Note> { useCreateNote", "description": "Creates a new note by sending a POST request with the note's payload.", "scope": "", "scopeKind": ""}, {"name": "export async function useUpdateNote(id: string, payload: NotePayload): Promise<Note> { useUpdateNote", "description": "Updates an existing note identified by its ID.", "scope": "", "scopeKind": ""}, {"name": "export async function useDeleteNote(id: string): Promise<void> { useDeleteNote", "description": "Deletes a note by its ID.", "scope": "", "scopeKind": ""}, {"name": "export function useNotesState() { useNotesState", "description": "Provides reactive state management for the notes list, including functions to refresh, create, update, and delete notes.", "scope": "", "scopeKind": ""}, {"name": "function getBase() { getBase", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["useFetch<Note[]>", "useFetch<Note>", "useFetch<Note>", "useFetch<Note>", "useFetch", "useCreateNote", "useUpdateNote", "useDeleteNote"], "search-terms": ["useNotesApi", "Notes API", "Vue composables", "Notes state", "fetch notes", "create note", "update note", "delete note"], "state": 2, "file_id": 9, "knowledge_revision": 25, "git_revision": "", "revision_history": [{"20": ""}, {"25": ""}], "ctags": [{"_type": "tag", "name": "Note", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-12135-12180/notes_frontend/composables/useNotesApi.ts", "pattern": "/^export type Note = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "NotePayload", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-12135-12180/notes_frontend/composables/useNotesApi.ts", "pattern": "/^type NotePayload = {$/", "language": "TypeScript", "kind": "alias"}, {"_type": "tag", "name": "base", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-12135-12180/notes_frontend/composables/useNotesApi.ts", "pattern": "/^  const base = getBase()$/", "language": "TypeScript", "kind": "constant", "scope": "useCreateNote", "scopeKind": "function"}, {"_type": "tag", "name": "base", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-12135-12180/notes_frontend/composables/useNotesApi.ts", "pattern": "/^  const base = getBase()$/", "language": "TypeScript", "kind": "constant", "scope": "useDeleteNote", "scopeKind": "function"}, {"_type": "tag", "name": "base", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-12135-12180/notes_frontend/composables/useNotesApi.ts", "pattern": "/^  const base = getBase()$/", "language": "TypeScript", "kind": "constant", "scope": "useFetchNote", "scopeKind": "function"}, {"_type": "tag", "name": "base", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-12135-12180/notes_frontend/composables/useNotesApi.ts", "pattern": "/^  const base = getBase()$/", "language": "TypeScript", "kind": "constant", "scope": "useFetchNotes", "scopeKind": "function"}, {"_type": "tag", "name": "base", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-12135-12180/notes_frontend/composables/useNotesApi.ts", "pattern": "/^  const base = getBase()$/", "language": "TypeScript", "kind": "constant", "scope": "useUpdateNote", "scopeKind": "function"}, {"_type": "tag", "name": "config", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-12135-12180/notes_frontend/composables/useNotesApi.ts", "pattern": "/^  const config = useRuntimeConfig()$/", "language": "TypeScript", "kind": "constant", "scope": "getBase", "scopeKind": "function"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-12135-12180/notes_frontend/composables/useNotesApi.ts", "pattern": "/^  const { data, error } = await useFetch<Note>(`${base}\\/notes\\/${id}`, { method: 'GET' })$/", "language": "TypeScript", "kind": "constant", "scope": "useFetchNote", "scopeKind": "function"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-12135-12180/notes_frontend/composables/useNotesApi.ts", "pattern": "/^  const { data, error } = await useFetch<Note>(`${base}\\/notes\\/${id}`, {$/", "language": "TypeScript", "kind": "constant", "scope": "useUpdateNote", "scopeKind": "function"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-12135-12180/notes_frontend/composables/useNotesApi.ts", "pattern": "/^  const { data, error } = await useFetch<Note>(`${base}\\/notes`, {$/", "language": "TypeScript", "kind": "constant", "scope": "useCreateNote", "scopeKind": "function"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-12135-12180/notes_frontend/composables/useNotesApi.ts", "pattern": "/^  const { data, error } = await useFetch<Note[]>(url, { method: 'GET' })$/", "language": "TypeScript", "kind": "constant", "scope": "useFetchNotes", "scopeKind": "function"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-12135-12180/notes_frontend/composables/useNotesApi.ts", "pattern": "/^  const { data, error } = await useFetch<Note>(`${base}\\/notes\\/${id}`, { method: 'GET' })$/", "language": "TypeScript", "kind": "constant", "scope": "useFetchNote", "scopeKind": "function"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-12135-12180/notes_frontend/composables/useNotesApi.ts", "pattern": "/^  const { data, error } = await useFetch<Note>(`${base}\\/notes\\/${id}`, {$/", "language": "TypeScript", "kind": "constant", "scope": "useUpdateNote", "scopeKind": "function"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-12135-12180/notes_frontend/composables/useNotesApi.ts", "pattern": "/^  const { data, error } = await useFetch<Note>(`${base}\\/notes`, {$/", "language": "TypeScript", "kind": "constant", "scope": "useCreateNote", "scopeKind": "function"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-12135-12180/notes_frontend/composables/useNotesApi.ts", "pattern": "/^  const { data, error } = await useFetch<Note[]>(url, { method: 'GET' })$/", "language": "TypeScript", "kind": "constant", "scope": "useFetchNotes", "scopeKind": "function"}, {"_type": "tag", "name": "error", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-12135-12180/notes_frontend/composables/useNotesApi.ts", "pattern": "/^  const { error } = await useFetch(`${base}\\/notes\\/${id}`, { method: 'DELETE' })$/", "language": "TypeScript", "kind": "constant", "scope": "useDeleteNote", "scopeKind": "function"}, {"_type": "tag", "name": "getBase", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-12135-12180/notes_frontend/composables/useNotesApi.ts", "pattern": "/^function getBase() {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "idx", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-12135-12180/notes_frontend/composables/useNotesApi.ts", "pattern": "/^    const idx = notes.value.findIndex(n => n.id === id)$/", "language": "TypeScript", "kind": "constant", "scope": "useNotesState", "scopeKind": "function"}, {"_type": "tag", "name": "loading", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-12135-12180/notes_frontend/composables/useNotesApi.ts", "pattern": "/^  const loading = ref(false)$/", "language": "TypeScript", "kind": "constant", "scope": "useNotesState", "scopeKind": "function"}, {"_type": "tag", "name": "newNote", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-12135-12180/notes_frontend/composables/useNotesApi.ts", "pattern": "/^    const newNote = await useCreateNote({ title: 'Untitled', content: '' })$/", "language": "TypeScript", "kind": "constant", "scope": "useNotesState", "scopeKind": "function"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-12135-12180/notes_frontend/composables/useNotesApi.ts", "pattern": "/^  const notes = ref<Note[]>([])$/", "language": "TypeScript", "kind": "constant", "scope": "useNotesState", "scopeKind": "function"}, {"_type": "tag", "name": "search", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-12135-12180/notes_frontend/composables/useNotesApi.ts", "pattern": "/^  const search = ref('')$/", "language": "TypeScript", "kind": "constant", "scope": "useNotesState", "scopeKind": "function"}, {"_type": "tag", "name": "selectedId", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-12135-12180/notes_frontend/composables/useNotesApi.ts", "pattern": "/^  const selectedId = ref<string | null>(null)$/", "language": "TypeScript", "kind": "constant", "scope": "useNotesState", "scopeKind": "function"}, {"_type": "tag", "name": "selectedNote", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-12135-12180/notes_frontend/composables/useNotesApi.ts", "pattern": "/^  const selectedNote = computed(() => notes.value.find(n => n.id === selectedId.value) || null)$/", "language": "TypeScript", "kind": "constant", "scope": "useNotesState", "scopeKind": "function"}, {"_type": "tag", "name": "updated", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-12135-12180/notes_frontend/composables/useNotesApi.ts", "pattern": "/^    const updated = await useUpdateNote(id, payload)$/", "language": "TypeScript", "kind": "constant", "scope": "useNotesState", "scopeKind": "function"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-12135-12180/notes_frontend/composables/useNotesApi.ts", "pattern": "/^  const url = query ? `${base}\\/notes?search=${encodeURIComponent(query)}` : `${base}\\/notes`$/", "language": "TypeScript", "kind": "constant", "scope": "useFetchNotes", "scopeKind": "function"}, {"_type": "tag", "name": "useCreateNote", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-12135-12180/notes_frontend/composables/useNotesApi.ts", "pattern": "/^export async function useCreateNote(payload: NotePayload): Promise<Note> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "useDeleteNote", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-12135-12180/notes_frontend/composables/useNotesApi.ts", "pattern": "/^export async function useDeleteNote(id: string): Promise<void> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "useFetchNote", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-12135-12180/notes_frontend/composables/useNotesApi.ts", "pattern": "/^export async function useFetchNote(id: string): Promise<Note | null> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "useFetchNotes", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-12135-12180/notes_frontend/composables/useNotesApi.ts", "pattern": "/^export async function useFetchNotes(query?: string): Promise<Note[]> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "useNotesState", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-12135-12180/notes_frontend/composables/useNotesApi.ts", "pattern": "/^export function useNotesState() {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "useUpdateNote", "path": "/home/kavia/workspace/code-generation/simple-notes-organizer-12135-12180/notes_frontend/composables/useNotesApi.ts", "pattern": "/^export async function useUpdateNote(id: string, payload: NotePayload): Promise<Note> {$/", "language": "TypeScript", "kind": "function"}], "hash": "385cc9b58fc708153a0b61fd6b434b47", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/composables/useNotesApi.ts"}